#!/usr/bin/env ruby
#
require 'thor'
require 'yaml'
require_relative '../lib/generator/generator.rb'
require_relative '../lib/linter/linter.rb'
class GeneratorCLI < ::Thor

  desc 'generate', 'Generate properties'
  option 'project_path', banner: 'PROJECT_PATH', type: :string, desc: 'Path to the property project to generate properties for'
  option 'output', banner: 'OUTPUT', type: :string, desc: 'Output path for locally dumping generated outputs', :default => '/tmp/'
  option 'upload', banner: 'UPLOAD', type: :boolean, desc: 'Whether to upload or not', :default => false
  option 'upload_account', banner: 'UPLOAD_ACCOUNT', type: :string, desc: 'The account you are uploading properties to'
  option 'upload_region', banner: 'UPLOAD_REGION', type: :string, desc: 'The region your property bucket is in'
  option 'upload_bucket', banner: 'UPLOAD_BUCKET', type: :string, desc: 'The bucket you are uploading properties to.'

  def generate

    generator = PropertyGenerator::Generator.new(options)
    out = generator.generate
    if options['upload']
      if options['upload_account'].nil? || options['upload_region'].nil? && options['upload_bucket'].nil?
        puts 'Please specify upload configs'
      else
        generator.upload(out, options)
      end

    end
  end

  desc 'lint', 'Lint YAML files for properties repo'
  option 'project_path', banner: 'PROJECT_PATH', type: :string, desc: 'Path to the property project to generate properties for'
  def lint
    linter = PropertyGenerator::Linter.new(options['project_path'])
    linter.run_tests
    linter.display_report
    if linter.fail_check
      exit 1
    else
      exit 0
    end
  end
end

GeneratorCLI.start(ARGV)
